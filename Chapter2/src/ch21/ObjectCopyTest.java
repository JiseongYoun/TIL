package ch21;

public class ObjectCopyTest {

	public static void main(String[] args) {
		
		Book[] library = new Book[5];
		Book[] copyLibrary = new Book[5];
		
		library[0] = new Book("태백산맥1", "조정래");
		library[1] = new Book("태백산맥2", "조정래");
		library[2] = new Book("태백산맥2", "조정래");
		library[3] = new Book("태백산맥2", "조정래");
		library[4] = new Book("태백산맥2", "조정래");
		
		System.arraycopy(library, 0, copyLibrary, 0, 5);
		
//		System.out.println("== library ==");
//		for(Book book : library) {
//			System.out.println(book);
//			book.showInfo();
//		}
//		
//		System.out.println("== copy library ==");
//		for(Book book : copyLibrary) {
//			System.out.println(book);
//			book.showInfo();
//		}
		
		library[0].setAuthor("박완서");  // 0번째 엘리먼트를 바꿔봄. 카피한 라이브러리와 기존의 라이브러리가 같이 바뀜. 얕은 복사 - 주소가 같기 때문. 객체가 같아도될 경우 사용.
		library[0].setTitle("나목");
		
		System.out.println("== library ==");
		for(Book book : library) {
			System.out.println(book);
			book.showInfo();
		}
		
		System.out.println("== copy library ==");
		for(Book book : copyLibrary) {
			System.out.println(book);
			book.showInfo();
		}

	}

}
